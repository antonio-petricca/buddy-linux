#!/bin/bash

. /etc/default/grub
. /etc/default/grub.d/buddy-linux.cfg
. /usr/share/grub/grub-mkconfig_lib

function addMenuEntry {
  local ENTRY_NAME=$1
  local KERNEL=$2
  local FSTYPE=$3

cat <<EOF

menuentry '${ENTRY_NAME}' --class gnu-linux --class gnu --class os {
  echo "Loading modules..."

  insmod xzio
  insmod part_msdos

  echo "Loading kernel \"${KERNEL}\"..."

  set root=${BOOT_PART}

  linux  /vmlinuz-${KERNEL} root=${ROOT_DEV} lvm_loops_host_dev=${HOST_DEV} lvm_loops_host_fstype=${FSTYPE} lvm_loops_host_fsoptions=${HOST_DEV_FSOPTIONS} lvm_loops_mask=${LVM_LOOPS_MASK} max_loop=${MAX_LOOPS} ${KERNEL_DEFAULTS}

  echo "Booting..."
  initrd /initrd.img-${KERNEL}
}
EOF

}

function addParagonMenuEntry {
    kernel=$1
    PARAGON_FS=$2

    KERNEL=$(basename $kernel | sed -e "s,^[^0-9]*-,,g")
    LAST_ENTRY=$(generateEntryName ${KERNEL} "paragon-${PARAGON_FS}")
    addMenuEntry "${LAST_ENTRY}" ${KERNEL} ${PARAGON_FS}
    echo "Found (Paragon \"${PARAGON_FS}\") '${LAST_ENTRY}'." 1>&2

    if [ -z "${GRUB_DEFAULT}" ]; then
      DEFAULT_ENTRY="${LAST_ENTRY}"
    fi
}

function generateEntryName {
  local KERNEL=$1
  local FSTYPE=$2
  local NAME_EXT=$3

  echo "Buddy Linux${NAME_EXT} (${KERNEL}, ${FSTYPE})"
}

# Get kernels list

KERNELS=$(for file in /boot/vmlinuz-* /vmlinuz-* /boot/kernel-* ; do
  if grub_file_is_not_garbage "${file}" ; then echo -n "${file} " ; fi
done)

DEFAULT_ENTRY=""
LAST_ENTRY=""
LATEST_KERNEL=$(version_find_latest ${KERNELS} | sed -e "s,^[^0-9]*-,,g")

# Adding entries

for kernel in ${KERNELS}; do
  KERNEL=$(basename $kernel | sed -e "s,^[^0-9]*-,,g")
  LAST_ENTRY=$(generateEntryName ${KERNEL} ${HOST_DEV_FSTYPE})
  addMenuEntry "${LAST_ENTRY}" ${KERNEL} ${HOST_DEV_FSTYPE}
  echo "Found '${LAST_ENTRY}'." 1>&2

  PARAGON_FS=ufsd
  PARAGON_DRIVER=/lib/modules/${KERNEL}/kernel/external/${PARAGON_FS}/${PARAGON_FS}.ko

  if [ -f "${PARAGON_DRIVER}" ]; then
    addParagonMenuEntry ${kernel} ${PARAGON_FS}
  fi

  PARAGON_FS=ntfs3
  PARAGON_DRIVER=/lib/modules/${KERNEL}/kernel/fs/${PARAGON_FS}/${PARAGON_FS}.ko

  if [ -f "${PARAGON_DRIVER}" ]; then
    addParagonMenuEntry ${kernel} ${PARAGON_FS}
  fi
done

# Set default

if [ -z "${GRUB_DEFAULT}" ]; then
  if [ -z "${DEFAULT_ENTRY}" ]; then
    DEFAULT_ENTRY=$(generateEntryName ${LATEST_KERNEL} ${HOST_DEV_FSTYPE})
  fi

  echo "set default='${DEFAULT_ENTRY}'"
  echo "Default kernel entry set to '${DEFAULT_ENTRY}'." 1>&2
fi
