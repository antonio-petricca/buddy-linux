#!/bin/bash

PARAM_ALL=0
PARAM_CUSTOM_KERNEL=
MODS_DIR=/lib/modules

function printError {
    echo -e "$@" >&2
}

function printInfo {
    echo -e "$@" >&1
}

function showHelp {
    printInfo "Synopsis:\n"
    printInfo "  $(basename $0) [OPTIONS]\n"
    printInfo "    -h | --help   : this screen."
    printInfo "    -a | --all    : update all kernel."
    printInfo "    -c | --custom : update the choosen kernel."
    printInfo "    -l | --list   : list available kernel."
    printInfo ""
}

function printInstalledKernels {
    printInfo "Available kernels for \"-c\" option:\n"
    ls -1 "${MODS_DIR}"
}

function parseOptions {
    if [ $# -eq 0 ]; then
        showHelp
        exit 1
    fi

    GET_OPT=$(getopt -o -hac:l --long help,all,custom,list: -- "$@" 2>&1 1>/dev/null)
    EXIT_CODE=$?

    if [ ${EXIT_CODE} != 0 ]; then
        printError "Arguments parsing error(s):"
        printError "$(echo "${GET_OPT}" | sed -e 's/getopt: / - /')"
        exit $?
    fi

    while true; do
        case "$1" in
            -a | --all )
                PARAM_ALL=1
                shift
            ;;

            -c | --custom )
                PARAM_CUSTOM_KERNEL=$2
                shift 2
            ;;

            -h | --help )
                showHelp
                exit 1
            ;;

            -l | --list )
                printInstalledKernels
                exit 0
            ;;

            * )
                break
            ;;
        esac
    done
}

parseOptions $@

if [[ $EUID > 0 ]]; then
  echo "Please run as root/sudo!"
  exit 1
fi

if [ ${PARAM_ALL} -eq 0 ]; then

  if [ ! -d "${MODS_DIR}/${PARAM_CUSTOM_KERNEL}" ]; then
    printError "Kernel \"${PARAM_CUSTOM_KERNEL}\" not found."
    exit 1
  fi

  /usr/bin/dracut -f /boot/initrd.img-${PARAM_CUSTOM_KERNEL} ${PARAM_CUSTOM_KERNEL} || exit $?

else

  for MOD_DIR in $(ls -1 ${MODS_DIR}); do

       ls ${MODS_DIR}/${MOD_DIR}/modules.dep* 2>&1 1>/dev/null \
    && /usr/bin/dracut -f /boot/initrd.img-${MOD_DIR} ${MOD_DIR} \
    || exit $?

  done

fi
